-- Haskell module generated by the BNF converter

module Parser.Tidy.Skel where

import qualified Parser.Tidy.Abs

type Err = Either String
type Result = Err String

failure :: Show a => a -> Result
failure x = Left $ "Undefined case: " ++ show x

transUpperCaseIdent :: Parser.Tidy.Abs.UpperCaseIdent -> Result
transUpperCaseIdent x = case x of
  Parser.Tidy.Abs.UpperCaseIdent string -> failure x
transLowerCaseIdent :: Parser.Tidy.Abs.LowerCaseIdent -> Result
transLowerCaseIdent x = case x of
  Parser.Tidy.Abs.LowerCaseIdent string -> failure x
transProgram :: Parser.Tidy.Abs.Program -> Result
transProgram x = case x of
  Parser.Tidy.Abs.ProgramEntrypoint classdecls -> failure x
transClassIdent :: Parser.Tidy.Abs.ClassIdent -> Result
transClassIdent x = case x of
  Parser.Tidy.Abs.ClassIdentifier uppercaseident -> failure x
transClassDecl :: Parser.Tidy.Abs.ClassDecl -> Result
transClassDecl x = case x of
  Parser.Tidy.Abs.ClassDeclaration abstractmodifier classtypemodifier classident inheritance classbody -> failure x
transInheritance :: Parser.Tidy.Abs.Inheritance -> Result
transInheritance x = case x of
  Parser.Tidy.Abs.SuperclassPresent -> failure x
  Parser.Tidy.Abs.SuperclassAbsent classident -> failure x
transClassBody :: Parser.Tidy.Abs.ClassBody -> Result
transClassBody x = case x of
  Parser.Tidy.Abs.ClassBodyEmpty -> failure x
  Parser.Tidy.Abs.ClassBodyFilled valuessection variablessection functionssection actionssection -> failure x
transClassTypeModifier :: Parser.Tidy.Abs.ClassTypeModifier -> Result
transClassTypeModifier x = case x of
  Parser.Tidy.Abs.MMutable -> failure x
  Parser.Tidy.Abs.MImmutable -> failure x
  Parser.Tidy.Abs.MSingleton -> failure x
transAbstractModifier :: Parser.Tidy.Abs.AbstractModifier -> Result
transAbstractModifier x = case x of
  Parser.Tidy.Abs.MConcrete -> failure x
  Parser.Tidy.Abs.MAbstract -> failure x
transValuesSection :: Parser.Tidy.Abs.ValuesSection -> Result
transValuesSection x = case x of
  Parser.Tidy.Abs.ValuesAbsent -> failure x
  Parser.Tidy.Abs.ValuesPresent objectdecls -> failure x
transVariablesSection :: Parser.Tidy.Abs.VariablesSection -> Result
transVariablesSection x = case x of
  Parser.Tidy.Abs.VariablesAbsent -> failure x
  Parser.Tidy.Abs.VariablesPresent objectdecls -> failure x
transFunctionsSection :: Parser.Tidy.Abs.FunctionsSection -> Result
transFunctionsSection x = case x of
  Parser.Tidy.Abs.FunctionsAbsent -> failure x
  Parser.Tidy.Abs.FunctionsPresent functiondecls -> failure x
transActionsSection :: Parser.Tidy.Abs.ActionsSection -> Result
transActionsSection x = case x of
  Parser.Tidy.Abs.ActionsAbsent -> failure x
  Parser.Tidy.Abs.ActionsPresent actiondecls -> failure x
transObjectIdent :: Parser.Tidy.Abs.ObjectIdent -> Result
transObjectIdent x = case x of
  Parser.Tidy.Abs.ObjectIdentifier lowercaseident -> failure x
transObjectType :: Parser.Tidy.Abs.ObjectType -> Result
transObjectType x = case x of
  Parser.Tidy.Abs.ObjectTypeClass classident genericparameter -> failure x
  Parser.Tidy.Abs.ObjectTypeFunction methodtype -> failure x
  Parser.Tidy.Abs.ObjectTypeAction methodtype -> failure x
transGenericParameter :: Parser.Tidy.Abs.GenericParameter -> Result
transGenericParameter x = case x of
  Parser.Tidy.Abs.GenericParameterAbsent -> failure x
  Parser.Tidy.Abs.GenericParameterPresent classidents -> failure x
transObjectDecl :: Parser.Tidy.Abs.ObjectDecl -> Result
transObjectDecl x = case x of
  Parser.Tidy.Abs.ObjectDeclaration visibilitymodifier objectdeclproper -> failure x
transVisibilityModifier :: Parser.Tidy.Abs.VisibilityModifier -> Result
transVisibilityModifier x = case x of
  Parser.Tidy.Abs.MPublic -> failure x
  Parser.Tidy.Abs.MPrivate -> failure x
transObjectDeclProper :: Parser.Tidy.Abs.ObjectDeclProper -> Result
transObjectDeclProper x = case x of
  Parser.Tidy.Abs.ObjectDeclarationProper objectident objecttype initialization -> failure x
transInitialization :: Parser.Tidy.Abs.Initialization -> Result
transInitialization x = case x of
  Parser.Tidy.Abs.Uninitialized -> failure x
  Parser.Tidy.Abs.Initialized expr -> failure x
transMethodIdent :: Parser.Tidy.Abs.MethodIdent -> Result
transMethodIdent x = case x of
  Parser.Tidy.Abs.MethodIdentifier lowercaseident -> failure x
transMethodType :: Parser.Tidy.Abs.MethodType -> Result
transMethodType x = case x of
  Parser.Tidy.Abs.MethodTypeSignature paramlist objecttype -> failure x
transParamList :: Parser.Tidy.Abs.ParamList -> Result
transParamList x = case x of
  Parser.Tidy.Abs.ParameterList objectdeclpropers -> failure x
transFunctionDecl :: Parser.Tidy.Abs.FunctionDecl -> Result
transFunctionDecl x = case x of
  Parser.Tidy.Abs.FunctionDeclaration overridemodifier visibilitymodifier methodident methodtype functionbody -> failure x
transOverrideModifier :: Parser.Tidy.Abs.OverrideModifier -> Result
transOverrideModifier x = case x of
  Parser.Tidy.Abs.MNonOverriding -> failure x
  Parser.Tidy.Abs.MOverride -> failure x
transFunctionBody :: Parser.Tidy.Abs.FunctionBody -> Result
transFunctionBody x = case x of
  Parser.Tidy.Abs.FunctionBodyOneLine expr -> failure x
  Parser.Tidy.Abs.FunctionBodyMultiLine expr withvalues -> failure x
transWithValues :: Parser.Tidy.Abs.WithValues -> Result
transWithValues x = case x of
  Parser.Tidy.Abs.WithValuesAbsent -> failure x
  Parser.Tidy.Abs.WithValuesPresent valuessection -> failure x
transActionDecl :: Parser.Tidy.Abs.ActionDecl -> Result
transActionDecl x = case x of
  Parser.Tidy.Abs.ActionDeclaration overridemodifier visibilitymodifier methodident methodtype actionbody -> failure x
transActionBody :: Parser.Tidy.Abs.ActionBody -> Result
transActionBody x = case x of
  Parser.Tidy.Abs.ActionBodyOneLine expr -> failure x
  Parser.Tidy.Abs.ActionBodyMultiLine exprs -> failure x
transExpr :: Parser.Tidy.Abs.Expr -> Result
transExpr x = case x of
  Parser.Tidy.Abs.ELiteral literal -> failure x
  Parser.Tidy.Abs.ELocalValue objectident -> failure x
  Parser.Tidy.Abs.EGetExpression getexpr -> failure x
  Parser.Tidy.Abs.EDoExpression doexpr -> failure x
  Parser.Tidy.Abs.EConstructorCall ctorcall -> failure x
  Parser.Tidy.Abs.ELambdaFunction lambdafunction -> failure x
  Parser.Tidy.Abs.ELambdaAction lambdaaction -> failure x
  Parser.Tidy.Abs.EImperativeControlFlow imperativecontrolflow -> failure x
  Parser.Tidy.Abs.EFunctionalControlFlow functionalcontrolflow -> failure x
  Parser.Tidy.Abs.ELocalValueDeclaration localvaluedecl -> failure x
  Parser.Tidy.Abs.EUnaryNot expr -> failure x
  Parser.Tidy.Abs.EUnaryMinus expr -> failure x
  Parser.Tidy.Abs.EMultiply expr1 expr2 -> failure x
  Parser.Tidy.Abs.EDivide expr1 expr2 -> failure x
  Parser.Tidy.Abs.EModulo expr1 expr2 -> failure x
  Parser.Tidy.Abs.EAdd expr1 expr2 -> failure x
  Parser.Tidy.Abs.ESubtract expr1 expr2 -> failure x
  Parser.Tidy.Abs.EConcatenate expr1 expr2 -> failure x
  Parser.Tidy.Abs.ERelationalOperator expr1 relationaloperator expr2 -> failure x
  Parser.Tidy.Abs.EBooleanOperator expr1 booleanoperator expr2 -> failure x
transLiteral :: Parser.Tidy.Abs.Literal -> Result
transLiteral x = case x of
  Parser.Tidy.Abs.LInt integer -> failure x
  Parser.Tidy.Abs.LBool boolean -> failure x
  Parser.Tidy.Abs.LChar char -> failure x
  Parser.Tidy.Abs.LString string -> failure x
  Parser.Tidy.Abs.LVoid void -> failure x
transBoolean :: Parser.Tidy.Abs.Boolean -> Result
transBoolean x = case x of
  Parser.Tidy.Abs.BTrue -> failure x
  Parser.Tidy.Abs.BFalse -> failure x
transVoid :: Parser.Tidy.Abs.Void -> Result
transVoid x = case x of
  Parser.Tidy.Abs.VPass -> failure x
transLocalValueDecl :: Parser.Tidy.Abs.LocalValueDecl -> Result
transLocalValueDecl x = case x of
  Parser.Tidy.Abs.LocalValueDeclaration objectdecl -> failure x
transLambdaFunction :: Parser.Tidy.Abs.LambdaFunction -> Result
transLambdaFunction x = case x of
  Parser.Tidy.Abs.LambdaFunctionOneLine paramlist expr -> failure x
  Parser.Tidy.Abs.LambdaFunctionMultiLine paramlist expr -> failure x
transLambdaAction :: Parser.Tidy.Abs.LambdaAction -> Result
transLambdaAction x = case x of
  Parser.Tidy.Abs.LambdaActionOneLine paramlist expr -> failure x
  Parser.Tidy.Abs.LambdaActionMultiLine paramlist exprs -> failure x
transArgList :: Parser.Tidy.Abs.ArgList -> Result
transArgList x = case x of
  Parser.Tidy.Abs.ArgumentListAbsent -> failure x
  Parser.Tidy.Abs.ArgumentListPresent functionargs -> failure x
transFunctionArg :: Parser.Tidy.Abs.FunctionArg -> Result
transFunctionArg x = case x of
  Parser.Tidy.Abs.FunctionArgument expr -> failure x
transFunctionCall :: Parser.Tidy.Abs.FunctionCall -> Result
transFunctionCall x = case x of
  Parser.Tidy.Abs.CallFunction methodident arglist -> failure x
transActionCall :: Parser.Tidy.Abs.ActionCall -> Result
transActionCall x = case x of
  Parser.Tidy.Abs.CallAction methodident arglist -> failure x
transCtorCall :: Parser.Tidy.Abs.CtorCall -> Result
transCtorCall x = case x of
  Parser.Tidy.Abs.CallConstructor classident arglist -> failure x
transGetExpr :: Parser.Tidy.Abs.GetExpr -> Result
transGetExpr x = case x of
  Parser.Tidy.Abs.GetExpressionInstance objectident functioncall -> failure x
  Parser.Tidy.Abs.GetExpressionStatic classident functioncall -> failure x
  Parser.Tidy.Abs.GetExpressionChain getexpr functioncall -> failure x
transDoExpr :: Parser.Tidy.Abs.DoExpr -> Result
transDoExpr x = case x of
  Parser.Tidy.Abs.DoExpressionInstance objectident actioncall -> failure x
  Parser.Tidy.Abs.DoExpressionStatic classident actioncall -> failure x
  Parser.Tidy.Abs.DoExpressionChain getexpr actioncall -> failure x
transImperativeControlFlow :: Parser.Tidy.Abs.ImperativeControlFlow -> Result
transImperativeControlFlow x = case x of
  Parser.Tidy.Abs.IWhile expr exprs -> failure x
  Parser.Tidy.Abs.IForeach objectdecl expr exprs -> failure x
  Parser.Tidy.Abs.IIf expr exprs optionalelsebranch -> failure x
transOptionalElseBranch :: Parser.Tidy.Abs.OptionalElseBranch -> Result
transOptionalElseBranch x = case x of
  Parser.Tidy.Abs.IElsePresent exprs -> failure x
  Parser.Tidy.Abs.IElseIf expr exprs optionalelsebranch -> failure x
  Parser.Tidy.Abs.IElseAbsent -> failure x
transFunctionalControlFlow :: Parser.Tidy.Abs.FunctionalControlFlow -> Result
transFunctionalControlFlow x = case x of
  Parser.Tidy.Abs.FIfThenElse expr thenbranch elsebranch -> failure x
  Parser.Tidy.Abs.FMatchCase expr matchcases -> failure x
transThenBranch :: Parser.Tidy.Abs.ThenBranch -> Result
transThenBranch x = case x of
  Parser.Tidy.Abs.FThenOneLine expr -> failure x
  Parser.Tidy.Abs.FThenMultiLine expr -> failure x
transElseBranch :: Parser.Tidy.Abs.ElseBranch -> Result
transElseBranch x = case x of
  Parser.Tidy.Abs.FElseOneLine expr -> failure x
  Parser.Tidy.Abs.FElseMultiLine expr -> failure x
  Parser.Tidy.Abs.FElseIf expr thenbranch elsebranch -> failure x
transMatchCase :: Parser.Tidy.Abs.MatchCase -> Result
transMatchCase x = case x of
  Parser.Tidy.Abs.FCase pattern_ expr -> failure x
transPattern :: Parser.Tidy.Abs.Pattern -> Result
transPattern x = case x of
  Parser.Tidy.Abs.FTypePattern classident -> failure x
transRelationalOperator :: Parser.Tidy.Abs.RelationalOperator -> Result
transRelationalOperator x = case x of
  Parser.Tidy.Abs.RLess -> failure x
  Parser.Tidy.Abs.RLessEqual -> failure x
  Parser.Tidy.Abs.RGreater -> failure x
  Parser.Tidy.Abs.RGreaterEqual -> failure x
  Parser.Tidy.Abs.REqual -> failure x
  Parser.Tidy.Abs.RNotEqual -> failure x
transBooleanOperator :: Parser.Tidy.Abs.BooleanOperator -> Result
transBooleanOperator x = case x of
  Parser.Tidy.Abs.BAnd -> failure x
  Parser.Tidy.Abs.BOr -> failure x

