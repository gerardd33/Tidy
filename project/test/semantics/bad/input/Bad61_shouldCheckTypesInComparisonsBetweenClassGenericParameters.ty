immutable class Container[B, A] {
    
    values: {
        element1: A;
        element2: B;
        element3: A;
    }
    
    functions: {
        goodTypes: () -> Bool = this.element1 == this.element3
        badTypes: () -> Bool = this.element1 == this.element2 // UnexpectedTypeError
    }
}

singleton class GenericTypes {
    
    actions: {
        main: () -> Void = Pass
    }
}
               
