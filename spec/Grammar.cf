-- PROGRAMS -----------------------------------

entrypoints Program ;
Program. Program ::= [ClassDecl] ;


-- CLASS DECLARATIONS -------------------------

separator nonempty ClassDecl "" ;

ClassIdent. ClassIdent ::= Ident ;
-- TODO starts with upper case

ClassDeclConcrete. ClassDecl ::= ClassType "class" ClassIdent ClassBody ;
ClassDeclAbstract. ClassDecl ::= "abstract" ClassType "class" ClassIdent ClassBody ;


ClassBodyEmpty. ClassBody ::= ;
ClassBodyFilled. ClassBody ::= "{" ValuesSection VariablesSection FunctionsSection ActionsSection "}" ;

-- CLASS MODIFIERS ----------------------------

MMutable. ClassType ::= "mutable" ;
MImmutable. ClassType ::= "immutable" ;
MSingleton. ClassType ::= "singleton" ;


-- CLASS SECTION DECLARATIONS -----------------

ValuesAbsent. ValuesSection ::= ;
ValuesPresent. ValuesSection ::= "values:" ValuesBody ;

VariablesAbsent. VariablesSection ::= ;
VariablesPresent. VariablesSection ::= "variables:" VariablesBody ;

FunctionsAbsent. FunctionsSection ::= ;
FunctionsPresent. FunctionsSection ::= "functions:" FunctionsBody ;

ActionsAbsent. ActionsSection ::= ;
ActionsPresent. ActionsSection ::= "actions:" ActionsBody ;


-- VALUES SECTION -----------------------------

ValueIdent. ValueIdent ::= Ident ;
-- TODO if starts with lower case then normal value, else a constant 
ValueType. ValueType ::= ClassIdent ;
-- TODO doesn't work with generic types

ValuesBodyEmpty. ValuesBody ::= ;
ValuesBodyOneLine. ValuesBody ::= [ValueDecl] ;
ValuesBodyMultiLine. ValuesBody ::= "{" [ValueDecl] "}" ;

separator ValueDecl "," ; 
UninitialisedAttribute. ValueDecl ::= ValueIdent ":" ValueType ;
InitialisedAttribute. ValueDecl ::= ValueIdent ":" ValueType "=" Exp ;


-- VARIABLES SECTION --------------------------

VariablesBodyEmpty. VariablesBody ::= ;
VariablesBodyOneLine. VariablesBody ::= [ValueDecl] ;
VariablesBodyMultiLine. VariablesBody ::= "{" [ValueDecl] "}" ;


-- FUNCTIONS SECTION --------------------------

FunctionsBodyEmpty. FunctionsBody ::= ;


-- ACTIONS SECTION ----------------------------

ActionsBodyEmpty. ActionsBody ::= ;






-- TODO currently a mock
Exp. Exp ::= Integer;





-- COMMENTS -----------------------------------

comment "//" ;
comment "/*" "*/" ;

